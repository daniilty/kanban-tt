{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Auth API.",
    "termsOfService": "there are no TOS at this moment, use at your own risk we take no responsibility",
    "contact": {
      "name": "Turaev Daniil",
      "email": "dturaev@pesda.ru"
    },
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "0.0.1"
  },
  "host": "api-tt.pesda.ru",
  "basePath": "/",
  "paths": {
    "/api/v1/auth/login": {
      "post": {
        "description": "Login to your account",
        "tags": [
          "Authorize"
        ],
        "operationId": "user",
        "parameters": [
          {
            "name": "loginRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/loginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "accessTokenResponse",
            "schema": {
              "$ref": "#/definitions/accessTokenResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "security": [
          {
            "api_key": [
              "[]"
            ]
          }
        ],
        "description": "get account info",
        "tags": [
          "UserInfo"
        ],
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "userInfoResponse",
            "schema": {
              "$ref": "#/definitions/userInfoResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "security": [
          {
            "api_key": [
              "[]"
            ]
          }
        ],
        "description": "Update your account",
        "tags": [
          "UserInfo"
        ],
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "userRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/userRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "okResp",
            "schema": {
              "$ref": "#/definitions/okResp"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "description": "Register user",
        "tags": [
          "Register"
        ],
        "operationId": "registerUser",
        "parameters": [
          {
            "name": "registerRequest",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "$ref": "#/definitions/registerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "accessTokenResponse",
            "schema": {
              "$ref": "#/definitions/accessTokenResponse"
            }
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "Internal server error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Code": {
      "type": "string",
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/core"
    },
    "accessTokenResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string",
          "x-go-name": "AccessToken"
        }
      },
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/Code"
        },
        "errorInfo": {
          "type": "string",
          "x-go-name": "ErrorInfo"
        }
      },
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    },
    "loginRequest": {
      "type": "object",
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    },
    "okResp": {
      "type": "object",
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    },
    "registerRequest": {
      "type": "object",
      "required": [
        "email",
        "name",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        }
      },
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    },
    "userInfoResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "emailConfirmed": {
          "type": "boolean",
          "x-go-name": "EmailConfirmed"
        },
        "id": {
          "type": "string",
          "x-go-name": "ID"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "taskTTL": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TaskTTL"
        }
      },
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    },
    "userRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "emailConfirmed": {
          "type": "boolean",
          "x-go-name": "EmailConfirmed"
        },
        "name": {
          "type": "string",
          "x-go-name": "Name"
        },
        "password": {
          "type": "string",
          "x-go-name": "Password"
        },
        "taskTTL": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "TaskTTL"
        }
      },
      "x-go-package": "github.com/daniilty/kanban-tt/auth/internal/server"
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Bearer",
      "in": "header"
    }
  },
  "security": [
    {
      "api_key": []
    }
  ]
}